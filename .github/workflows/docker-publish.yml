name: Deploy

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "master" ]

jobs:

  deploy:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.extract_branch.outputs.branch }}
            ghcr.io/${{ github.repository }}:${{ github.sha }} 

      - name: Configure kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
      - name: Create kubeconfig
        # You need to set up your kubeconfig in some way, or use a dedicated action that authenticates
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > deploy.kubeconfig

      - name: Update K8s Deployment
        run: |
          kubectl apply -f ./deploy/celery-worker.yml
          kubectl apply -f ./deploy/deployment.yaml
          kubectl set image \
            deployment/${{ vars.WORKER_DEPLOYMENT_NAME }}-worker \
            ${{ vars.WORKER_DEPLOYMENT_NAME }}=ghcr.io/${{ github.repository }}:${{ github.sha }} --kubeconfig=deploy.kubeconfig
          kubectl set image \
            deployment/${{ vars.API_DEPLOYMENT_NAME }} \
            ${{ vars.API_DEPLOYMENT_NAME }}-container=ghcr.io/${{ github.repository }}:${{ github.sha }} --kubeconfig=deploy.kubeconfig
          # If needed, you can also do a rollout restart
          kubectl rollout restart deployment/${{ vars.WORKER_DEPLOYMENT_NAME }}-worker --kubeconfig=deploy.kubeconfig
          kubectl rollout restart deployment/${{ vars.API_DEPLOYMENT_NAME }} --kubeconfig=deploy.kubeconfig
          
          
          
